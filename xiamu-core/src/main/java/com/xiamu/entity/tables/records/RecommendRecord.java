/**
 * This class is generated by jOOQ
 */
package com.xiamu.entity.tables.records;


import com.xiamu.entity.tables.Recommend;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecommendRecord extends UpdatableRecordImpl<RecommendRecord> implements Record5<Long, String, String, Integer, Timestamp> {

	private static final long serialVersionUID = 842833525;

	/**
	 * Setter for <code>yjh.recommend.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>yjh.recommend.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>yjh.recommend.name</code>.
	 */
	public void setName(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>yjh.recommend.name</code>.
	 */
	public String getName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>yjh.recommend.recommend</code>.
	 */
	public void setRecommend(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>yjh.recommend.recommend</code>.
	 */
	public String getRecommend() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>yjh.recommend.create_time</code>.
	 */
	public void setCreateTime(Integer value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>yjh.recommend.create_time</code>.
	 */
	public Integer getCreateTime() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>yjh.recommend.update_time</code>.
	 */
	public void setUpdateTime(Timestamp value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>yjh.recommend.update_time</code>.
	 */
	public Timestamp getUpdateTime() {
		return (Timestamp) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, Integer, Timestamp> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, Integer, Timestamp> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Recommend.RECOMMEND.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Recommend.RECOMMEND.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Recommend.RECOMMEND.RECOMMEND_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Recommend.RECOMMEND.CREATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field5() {
		return Recommend.RECOMMEND.UPDATE_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getRecommend();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getCreateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value5() {
		return getUpdateTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord value2(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord value3(String value) {
		setRecommend(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord value4(Integer value) {
		setCreateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord value5(Timestamp value) {
		setUpdateTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public RecommendRecord values(Long value1, String value2, String value3, Integer value4, Timestamp value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached RecommendRecord
	 */
	public RecommendRecord() {
		super(Recommend.RECOMMEND);
	}

	/**
	 * Create a detached, initialised RecommendRecord
	 */
	public RecommendRecord(Long id, String name, String recommend, Integer createTime, Timestamp updateTime) {
		super(Recommend.RECOMMEND);

		setValue(0, id);
		setValue(1, name);
		setValue(2, recommend);
		setValue(3, createTime);
		setValue(4, updateTime);
	}
}
